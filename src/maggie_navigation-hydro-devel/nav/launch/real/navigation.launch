<launch>
    <arg name="robot" />

    <!--- Run AMCL -->
    <include file="$(find nav)/launch/amcl.launch">
        <arg name="robot" value="$(arg robot)" />
    </include>

    <!-- Planner -->
    <group ns="$(arg robot)">
        <node pkg="move_base" name="move_base" type="move_base" respawn="false" output="screen">
            <rosparam file="$(find nav)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
            <rosparam file="$(find nav)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
            <rosparam file="$(find nav)/config/local_costmap_params.yaml" command="load" />
            <rosparam file="$(find nav)/config/global_costmap_params.yaml" command="load" />
            <rosparam file="$(find nav)/config/base_local_planner_params.yaml" command="load" />

            <rosparam param="recovery_behaviors">
                [{name: rotate_recovery, type: rotate_recovery/RotateRecovery},
                {name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery},
                {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}]
            </rosparam>

            <param name="base_global_planner" type="string" value="navfn/NavfnROS" />

            <!-- The rate in Hz at which to run the global planning loop. If the frequency is set to 0.0, the global 
                planner will only run when a new goal is received or the local planner reports that its path is blocked 
                (default: 0.0) -->
            <param name="planner_frequency" type="double" value="0.1" />

            <!-- How long the planner will wait in seconds in an attempt to find a valid plan before space-clearing
                operations are performed (default: 15.0) -->
            <param name="planner_patience" type="double" value="5.0" />

            <!-- How long the controller will wait in seconds without receiving a valid control before space-clearing
                operations are performed (default: 3.0) -->
            <param name="controller_patience" type="double" value="1.0" />

            <remap from="map" to="/map" />
        </node>

        <!-- -->
        <!-- <node pkg="nav" name="maiss_stuck_robot_monitor" type="maiss_stuck_robot_monitor" respawn="true"/> -->
    </group>
</launch>
