<launch>
    <arg name="robot" />

    <!--- Run AMCL -->
    <include file="$(find nav)/launch/amcl.launch">
        <arg name="robot" value="$(arg robot)" />
    </include>

    <!-- Planner -->
    <group ns="$(arg robot)">
        <node pkg="move_base" name="move_base" type="move_base" respawn="false" output="screen">
            <rosparam file="$(find nav)/config/costmap_common_params_stage.yaml" command="load" ns="global_costmap" />
            <rosparam file="$(find nav)/config/costmap_common_params_stage.yaml" command="load" ns="local_costmap" />
            <rosparam file="$(find nav)/config/local_costmap_params.yaml" command="load" />
            <rosparam file="$(find nav)/config/global_costmap_params.yaml" command="load" />
            <rosparam file="$(find nav)/config/base_local_planner_params.yaml" command="load" />
    
            <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
            <param name="controller_frequency" type="double" value="20.0" />
    
            <rosparam param="recovery_behaviors">
                [{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery},
                {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}]
            </rosparam>
    
            <!-- Controller frequency needs to be at least 20! Otherwise we get strange behavior. -->
            <param name="planner_frequency" type="double" value="0.1" />
            
            <!-- If the planner frequency is set, the planner will *only* run at that rate. It can cause erratic behavior 
                between two timesteps, if the goal changes meanwhile and there is no plan. -->
            <param name="planner_patience" type="double" value="2.0" />
            <param name="controller_patience" type="double" value="60.0" />
            
            <remap from="map" to="/map" />
        </node>
    
        <!-- <node pkg="nav" name="maiss_stuck_robot_monitor" type="maiss_stuck_robot_monitor" respawn="true" /> -->
    </group>
</launch>
